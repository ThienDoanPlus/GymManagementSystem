@model GymManagementSystem.Models.ViewModels.UserManagement.UserEditViewModel

<h2>Chỉnh Sửa Người Dùng</h2>

@using (Html.BeginForm("Edit", "UserManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="mb-3">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(model => model.VaiTro, htmlAttributes: new { @class = "form-label" })
        @Html.DropDownListFor(model => model.VaiTro, new SelectList(new[] { "HoiVien", "PT", "QuanLy" }), new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.VaiTro, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.AvatarUrl, "Ảnh đại diện", htmlAttributes: new { @class = "form-label" })

        <!-- Input ẩn để lưu URL hiện tại (quan trọng cho form Edit) -->
        @Html.HiddenFor(model => model.AvatarUrl)

        <!-- Ô chọn file mới -->
        <input type="file" name="avatarFile" id="avatarFile" class="form-control" accept="image/*" />

        @if (!string.IsNullOrEmpty(Model.AvatarUrl))
        {
            <div class="mt-2">
                <img src="@Model.AvatarUrl" alt="Ảnh hiện tại" style="max-width: 200px; border-radius: 8px;" />
            </div>
        }
    </div>
    

    <hr />
    <p class="text-muted">Để trống nếu không muốn đổi mật khẩu.</p>
    <div class="mb-3">
        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "form-label" })
        @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>

    <div class="offcanvas-footer">
        <div class="d-grid gap-2">
            <input type="submit" value="Lưu thay đổi" class="btn btn-offcanvas-primary" />
        </div>
    </div>
}