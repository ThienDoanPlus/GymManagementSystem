<head>
    <link href="@Url.Content("~/Content/Workout/do.css")" rel="stylesheet" type="text/css" />
</head>
@model GymManagementSystem.Models.ChiTietKeHoach
@using GymManagementSystem.Helpers
@{
    ViewBag.Title = Model.BaiTap.TenBaiTap;
}
<link href="@Url.Content("~/Content/ai-workout.css")" rel="stylesheet" type="text/css" />

<div class="ai-workout-wrapper">
    <div class="plan-header text-center mb-4">
        <h2>@ViewBag.Title</h2>
        <p>Mục tiêu của bạn: @Model.SoLanMucTieu lần</p>
    </div>

    <div class="tv-frame">
        <div class="camera-screen">
            <video id="webcam" autoplay playsinline></video>
            <canvas id="canvas" class="d-flex justify-content-center"></canvas>
            
            <!-- LỚP PHỦ VIDEO HƯỚNG DẪN -->
            <div id="guide-video-overlay" class="guide-video-overlay">
                @if (!string.IsNullOrEmpty(Model.BaiTap.VideoUrl))
                {
                    @VideoHelper.EmbedYouTubeVideo(Model.BaiTap.VideoUrl)
                }
            </div>
        </div>
        <div class="hud-panel">
            <div class="hud-card">
                <h3>Số lần</h3>
                <h1 id="rep-counter">0</h1>
            </div>
            <div class="hud-card">
                <h3>Trạng thái</h3>
                <div id="status">Nhấn "Bắt đầu" để bật camera.</div>
            </div>
            <button id="startButton"><i class="fas fa-camera"></i> Bắt đầu</button>
            <button id="toggle-guide-btn" class="guide-button">
                <i class="fas fa-question-circle"></i> <span>Xem Hướng Dẫn</span>
            </button>
        </div>
    </div>

    <!-- KHU VỰC HƯỚNG DẪN (CHỈ CÓ BONG BÓNG CHAT) -->
    <div id="guide-section" class="guide-section">
        <div id="guide-steps-bubble" class="guide-steps-bubble d-none">
            <div class="bubble-header">Các Bước Thực Hiện</div>
            <div class="bubble-content">
                <ol>
                    @foreach (var buoc in Model.BaiTap.CacBuocThucHien.OrderBy(b => b.ThuTuBuoc))
                    {
                        <li>@buoc.NoiDung</li>
                    }
                </ol>
            </div>
        </div>
    </div>

    <div class="text-center">
        <a href="@Url.Action("XemKeHoach", "ThucHienKeHoach", new { dangKyKeHoachId = ViewBag.DangKyKeHoachId })" class="back-link">
            <i class="fas fa-arrow-left"></i> Quay lại kế hoạch
        </a>
    </div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "antiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

@section Scripts {
    @{
        var url1 = "https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.11.0/dist/tf.min.js";
        var url2 = "https://cdn.jsdelivr.net/npm/@tensorflow-models/pose-detection@2.0.0/dist/pose-detection.min.js";
    }
    <!-- 1. Nạp các thư viện bên ngoài -->
    <script src="@url1"></script>
    <script src="@url2"></script>

    <!-- 2. Nạp file script tùy chỉnh của bạn -->
    <script src="@Url.Content("~/Scripts/pose-tracking.js")"></script>

    <!-- 3. Khởi tạo script -->
    <script>
        // Đợi cho toàn bộ trang được tải xong
        $(document).ready(function () {

            // Tạo một đối tượng config chứa tất cả các giá trị từ server
            const trackerConfig = {
                targetReps: @Model.SoLanMucTieu,
                dangKyKeHoachId: @ViewBag.DangKyKeHoachId,
                baiTapId: @Model.BaiTapId,
                completeUrl: '@Url.Action("HoanThanhBaiTap", "ThucHienKeHoach")',
                redirectUrl: '@Url.Action("XemKeHoach", "ThucHienKeHoach", new { dangKyKeHoachId = ViewBag.DangKyKeHoachId })',
                loginUrl: '@Url.Action("Login", "Account", new { returnUrl = Request.Url.PathAndQuery })',
                antiForgeryToken: $('#antiForgeryForm input[name="__RequestVerificationToken"]').val()
            };

            initializePoseTracker(trackerConfig);
        });
    </script>

    <script>
        $(document).ready(function () {
            const toggleBtn = $('#toggle-guide-btn');
            const videoOverlay = $('#guide-video-overlay');
            const stepsBubble = $('#guide-steps-bubble');

            toggleBtn.on('click', function () {
                // Bật/tắt class 'visible' cho các phần tử
                videoOverlay.toggleClass('visible');
                stepsBubble.toggleClass('visible');
                stepsBubble.toggleClass('d-none')

                // Thay đổi text và icon của nút
                const isVisible = stepsBubble.hasClass('visible');
                if (isVisible) {
                    $(this).html('<i class="fas fa-times-circle"></i> <span>Ẩn Hướng Dẫn</span>');
                } else {
                    $(this).html('<i class="fas fa-question-circle"></i> <span>Xem Hướng Dẫn</span>');
                }
            });
        });
    </script>
}