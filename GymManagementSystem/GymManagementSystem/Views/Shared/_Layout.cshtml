@{
    var currentController = ViewContext.RouteData.GetRequiredString("controller");
    var currentAction = ViewContext.RouteData.GetRequiredString("action");
    var isHomePage = currentController.Equals("Home", StringComparison.OrdinalIgnoreCase) &&
                     currentAction.Equals("Index", StringComparison.OrdinalIgnoreCase);
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - FiTusion</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css' rel='stylesheet' />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- CSS Tùy chỉnh -->
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Homepage/homepage.css" rel="stylesheet" type="text/css" />
    @RenderSection("Styles", required: false)

    @if (Request.IsAuthenticated)
    {
        <meta name="user-id" content="@User.Identity.GetUserId()" />
        <meta name="user-name" content="@User.Identity.GetUserName()" />
        <meta name="user-role" content="@(User.IsInRole("PT") ? "PT" : (User.IsInRole("HoiVien") ? "HoiVien" : "QuanLy"))" />
    }
</head>
<body>
    <header>
        <!-- Navbar dùng cú pháp Bootstrap 5 -->
        <nav class="navbar navbar-expand-lg navbar-dark @(isHomePage ? "navbar-transparent" : "bg-dark")">
            <div class="container-fluid px-5 py-2">
                @Html.ActionLink("FiTusion", "Index", "Home", new { area = "" }, new { @class = "navbar-brand fw-bold" })
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar" aria-controls="mainNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="mainNavbar">
                    <ul class="navbar-nav mx-auto">
                        <li class="nav-item">@Html.ActionLink("Trang Chủ", "Index", "Home", null, new { @class = "nav-link" })</li>

                        @if (Request.IsAuthenticated && User.IsInRole("QuanLy"))
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="paymentDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Quản lý Dịch vụ
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="paymentDropdown">
                                    <li>@Html.ActionLink("Quản lý Hóa đơn", "Index", "HoaDons", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quản Lý Gói tập", "Index", "GoiTaps", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quản lý Khuyến mãi", "Index", "KhuyenMais", null, new { @class = "dropdown-item" })</li>
                                </ul>
                            </li>

                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="memberDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Quản lý Thành viên
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="paymentDropdown">
                                    <!-- Đổi tên các mục cho rõ ràng hơn -->
                                    <li>@Html.ActionLink("Quản lý Tài khoản", "Index", "UserManagement", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quản Lý VIP", "Index", "HangHoiViens", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quản Lý Đặc quyền ", "Index", "DacQuyens", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quét mã QR", "Scan", "Checkin", null, new { @class = "dropdown-item" })</li>
                                </ul>
                            </li>

                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="paymentDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Quản lý Phòng tập
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="paymentDropdown">
                                    <li>@Html.ActionLink("Quản lý Phòng", "Index", "Phongs", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quản Lý Thiết bị", "Index", "ThietBis", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quản Lý Kế hoạch", "Index", "KeHoachsAdmin", null, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Quản Lý Bài tập", "Index", "BaiTaps", null, new { @class = "dropdown-item" })</li>
                                </ul>
                            </li>
                            <li class="nav-item">@Html.ActionLink("Báo cáo thống kê", "Index", "Dashboard", null, new { @class = "nav-link" })</li>

                        }
                        @if (Request.IsAuthenticated && User.IsInRole("HoiVien"))
                        {
                            <li class="nav-item">@Html.ActionLink("Kế Hoạch Tập", "Index", "KeHoach", null, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Các Gói Tập", "DanhSachGoiTap", "HoiVien", null, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Đặt Lịch", "DatLich", "HoiVien", null, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Xem Tiến Độ", "XemTienDo", "HoiVien", null, new { @class = "nav-link" })</li>
                        }
                        @if (Request.IsAuthenticated && User.IsInRole("PT"))
                        {
                            if (User.IsInRole("QuanLy"))
                            {
                                <!-- Menu của Quản lý -->
                                <li class="nav-item">@Html.ActionLink("Dashboard", "Dashboard", "QuanLy", null, new { @class = "nav-link" })</li>
                                <li class="nav-item">@Html.ActionLink("Quản Lý Gói Tập", "Index", "GoiTaps", null, new { @class = "nav-link" })</li>
                                <!-- Thêm các menu khác của Quản lý ở đây -->
                            }
                            else if (User.IsInRole("PT"))
                            {
                                <!-- Menu của PT -->
                                <li class="nav-item">@Html.ActionLink("Lịch Làm Việc", "LichLamViec", "PT", null, new { @class = "nav-link" })</li>
                            }
                            else if (User.IsInRole("HoiVien"))
                            {
                                <!-- Menu của Hội viên -->
                                <li class="nav-item">@Html.ActionLink("Kế Hoạch Tập", "Index", "KeHoach", null, new { @class = "nav-link" })</li>
                                <li class="nav-item">@Html.ActionLink("Các Gói Tập", "DanhSachGoiTap", "HoiVien", null, new { @class = "nav-link" })</li>
                                <li class="nav-item">@Html.ActionLink("Đặt Lịch", "DatLich", "HoiVien", null, new { @class = "nav-link" })</li>
                                <li class="nav-item">@Html.ActionLink("Xem Tiến Độ", "XemTienDo", "HoiVien", null, new { @class = "nav-link" })</li>
                            }
                        }
                    </ul>
                    <div class="d-flex align-items-center">
                        @if (Request.IsAuthenticated)
                        {
                            <!-- Thông tin người dùng đã đăng nhập -->
                            <ul class="navbar-nav">
                                @Html.Action("NotificationBell", "Home")
                                @Html.Partial("_LoginPartial")
                            </ul>
                        }
                        else
                        {
                            <!-- Nút cho khách -->
                            @Html.ActionLink("Đăng nhập", "Login", "Account", null, new { @class = "btn btn-outline-custom me-2" })
                            @Html.ActionLink("Đăng ký", "Register", "Account", null, new { @class = "btn btn-custom-green" })
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <main role="main" class="@(isHomePage ? "" : "container main-content-padding")">
        @RenderBody()
    </main>

    <div class="offcanvas offcanvas-end" tabindex="-1" id="crudOffcanvas" aria-labelledby="offcanvasLabel" style="width: 500px;">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasLabel">Loading...</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body" id="offcanvas-body-content">
        </div>
    </div>
    <!-- CHAT WIDGET -->
    <div id="chat-container" style="display: none;">
        <!-- Màn hình danh sách liên hệ -->
        <div id="chat-list-view" class="card">
            <div class="card-header">Danh sách Chat</div>
            <div id="chat-list-users" class="list-group list-group-flush"></div>
        </div>
        <!-- Màn hình chi tiết cuộc trò chuyện -->
        <div id="chat-message-view" class="card" style="display: none;">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <button id="back-to-chat-list" class="btn btn-sm btn-outline-secondary me-2">&lt;</button>
                    <span id="chat-with-name"></span>
                </div>
                <button id="close-chat" type="button" class="btn-close btn-close-white"></button>
            </div>
            <div id="chat-messages" class="card-body"></div>
            <div class="card-footer d-flex">
                <input type="text" id="chat-message-input" class="form-control" placeholder="Nhập tin nhắn..." />
                <button id="send-chat-message" class="btn btn-primary ms-2"><i class="fas fa-paper-plane"></i></button>
            </div>
        </div>
    </div>
    <button id="open-chat-button"><i class="fas fa-comments"></i></button>



    <!-- === PHẦN SCRIPT (ĐÃ DỌN DẸP VÀ TẢI ĐÚNG 1 LẦN) === -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js'></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/Scripts/crud.js"></script>
    <script src="~/Scripts/tb-features.js"></script>

    <!-- ======================================================= -->
    <!--          KHỞI TẠO FIREBASE (PHẦN BỊ THIẾU)             -->
    <!-- ======================================================= -->
    <!-- SDK lõi của Firebase -->
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <!-- SDK của Realtime Database -->
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>
    <script>
        // Cấu hình Firebase cho ứng dụng của bạn
        const firebaseConfig = {
            apiKey: "AIzaSyCgwEgfKWnbSb1S8bNyAa_EeCJsKvFZ8RA",
            authDomain: "gymfitusionchat.firebaseapp.com",
            databaseURL: "https://gymfitusionchat-default-rtdb.firebaseio.com/",
            projectId: "gymfitusionchat",
            storageBucket: "gymfitusionchat.firebasestorage.app",
            messagingSenderId: "553735339451",
            appId: "1:553735339451:web:d68b5ecd7db5b1baf6589e",
            measurementId: "G-53ST4SS1TM"
        };

        // Khai báo biến database ở phạm vi toàn cục (global scope)
        var database;

        // Khởi tạo Firebase
        if (!firebase.apps.length) {
            firebase.initializeApp(firebaseConfig);
        }
        database = firebase.database(); // Gán giá trị cho biến toàn cục
    </script>
    <script src="~/Scripts/chat.js"></script>
    @RenderSection("scripts", required: false)

    <!-- Script chung cho toàn bộ trang -->
<script>
        $(document).ready(function() {
            // Script thông báo (sử dụng cú pháp Bootstrap 5)
            $(document).on('show.bs.dropdown', '.notification-dropdown', function () {
                var badge = $(this).find('.badge');
                if (badge.length > 0) {
                    var token = $('form[action="/Account/LogOff"] input[name="__RequestVerificationToken"]').val();
                    $.ajax({
                        url: '@Url.Action("MarkNotificationsAsRead", "Home")',
                        method: 'POST',
                        data: { __RequestVerificationToken: token },
                        success: function(response) {
                            if (response.success) {
                                badge.remove();
                            }
                        }
                    });
                }
            });

            // Script hiệu ứng cuộn Navbar
            function handleNavbarScroll() {
                if ($(document).scrollTop() > 50 || !@isHomePage.ToString().ToLower()) {
                    $('.navbar.fixed-top').removeClass('navbar-transparent');
                } else {
                    $('.navbar.fixed-top').addClass('navbar-transparent');
                }
            }
            handleNavbarScroll(); // Gọi 1 lần khi tải trang
            $(window).scroll(handleNavbarScroll); // Gọi mỗi khi cuộn
        });
</script>
</body>
</html>