@model GymManagementSystem.Models.GoiTap
@{
    bool isEditing = Model != null && Model.Id > 0;
    ViewBag.Title = isEditing ? "Chỉnh Sửa Gói Tập" : "Tạo Gói Tập Mới";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(isEditing ? "Edit" : "Create", "GoiTaps", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    if (isEditing)
    { @Html.HiddenFor(model => model.Id) }

<div class="mb-3">
    @Html.LabelFor(model => model.TenGoi, htmlAttributes: new { @class = "form-label" })
    @Html.EditorFor(model => model.TenGoi, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.TenGoi, "", new { @class = "text-danger" })
</div>
<div class="row mb-3">
    <div class="col">
        @Html.LabelFor(model => model.GiaTien, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.GiaTien, new { htmlAttributes = new { @class = "form-control", type = "number" } })
        @Html.ValidationMessageFor(model => model.GiaTien, "", new { @class = "text-danger" })
    </div>
    
</div>
<div class="mb-3">
    @Html.LabelFor(model => model.SoBuoiTapVoiPT, htmlAttributes: new { @class = "form-label" })
    @Html.EditorFor(model => model.SoBuoiTapVoiPT, new { htmlAttributes = new { @class = "form-control", type = "number" } })
    @Html.ValidationMessageFor(model => model.SoBuoiTapVoiPT, "", new { @class = "text-danger" })
</div>
<div class="mb-3">
    @Html.LabelFor(model => model.MoTaQuyenLoi, htmlAttributes: new { @class = "form-label" })
    @Html.TextAreaFor(model => model.MoTaQuyenLoi, 4, 40, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.MoTaQuyenLoi, "", new { @class = "text-danger" })
</div>
<div class="mb-3">
    @Html.LabelFor(model => model.ImageUrl, "Ảnh Minh Họa", htmlAttributes: new { @class = "form-label" })

    <!-- Input ẩn để lưu URL hiện tại (quan trọng cho form Edit) -->
    @Html.HiddenFor(model => model.ImageUrl)

    <!-- Ô chọn file mới -->
    <input type="file" name="imageFile" id="imageFile" class="form-control" accept="image/*" />

    <!-- Hiển thị ảnh hiện tại (nếu có, trong form Edit) -->
    @if (isEditing && !string.IsNullOrEmpty(Model.ImageUrl))
    {
        <div class="mt-2">
            <img src="@Model.ImageUrl" alt="Ảnh hiện tại" style="max-width: 200px; border-radius: 8px;" />
        </div>
    }
</div>

<div class="offcanvas-footer">
    <div class="d-grid gap-2">
        <input type="submit" value="@(isEditing ? "Lưu Thay Đổi" : "Tạo Gói Tập")" class="btn btn-offcanvas-primary" />
    </div>
</div>
}