@model GymManagementSystem.Models.ViewModels.KhuyenMaiViewModel

@{
    bool isEditing = Model.KhuyenMai != null && Model.KhuyenMai.Id > 0;
    ViewBag.Title = isEditing ? "Chỉnh Sửa Khuyến Mãi" : "Tạo Khuyến Mãi Mới";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(isEditing ? "Edit" : "Create", "KhuyenMais", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    if (isEditing)
    { @Html.HiddenFor(model => model.KhuyenMai.Id) }

<h5 class="text-muted">Thông tin chung</h5>
<hr class="mt-0 mb-3" />

<div class="mb-3">
    @Html.LabelFor(model => model.KhuyenMai.TenKhuyenMai, "Tên Khuyến Mãi", htmlAttributes: new { @class = "form-label" })
    @Html.EditorFor(model => model.KhuyenMai.TenKhuyenMai, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.KhuyenMai.TenKhuyenMai, "", new { @class = "text-danger" })
</div>
<div class="mb-3">
    @Html.LabelFor(model => model.KhuyenMai.MoTa,"Mô Tả", htmlAttributes: new { @class = "form-label" })
    @Html.TextAreaFor(model => model.KhuyenMai.MoTa, 3, 40, new { @class = "form-control" })
</div>
<div class="mb-3">
    @Html.LabelFor(model => model.KhuyenMai.MaKhuyenMai,"Mã Khuyến Mãi", htmlAttributes: new { @class = "form-label" })
    @Html.EditorFor(model => model.KhuyenMai.MaKhuyenMai, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.KhuyenMai.MaKhuyenMai, "", new { @class = "text-danger" })
</div>
<div class="row mb-3">
    <div class="col">
        @Html.LabelFor(model => model.KhuyenMai.PhanTramGiamGia,"% giảm", htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.KhuyenMai.PhanTramGiamGia, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.1" } })
    </div>
    <div class="col">
        @Html.LabelFor(model => model.KhuyenMai.SoTienGiamToiDa,"Giảm tối đa", htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.KhuyenMai.SoTienGiamToiDa, new { htmlAttributes = new { @class = "form-control", type = "number" } })
    </div>
</div>
<div class="mb-3">
    @Html.LabelFor(model => model.KhuyenMai.SoNgayHieuLuc, "Số ngày hiệu lực", htmlAttributes: new { @class = "form-label" })
    @Html.EditorFor(model => model.KhuyenMai.SoNgayHieuLuc, new { htmlAttributes = new { @class = "form-control", type = "number" } })
</div>
<div class="form-check form-switch mb-4">
    @Html.CheckBoxFor(model => model.KhuyenMai.IsActive, new { @class = "form-check-input", role = "switch" })
    @Html.LabelFor(model => model.KhuyenMai.IsActive, "Kích hoạt", htmlAttributes: new { @class = "form-check-label" })
</div>

<hr />
<h5 class="text-muted mb-2">Quy Tắc Áp Dụng Gói Tập</h5>

<div class="mb-3">
    <div class="form-check">
        <input class="form-check-input" type="radio" name="ApplyType" id="applyTypeAll" value="all" checked>
        <label class="form-check-label mb-2" for="applyTypeAll">Áp dụng cho Tất cả gói tập</label>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="ApplyType" id="applyTypeInclude" value="include">
        <label class="form-check-label mb-2" for="applyTypeInclude">Chỉ áp dụng cho các gói đã chọn</label>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="ApplyType" id="applyTypeExclude" value="exclude">
        <label class="form-check-label mb-2" for="applyTypeExclude">Ngoại trừ các gói đã chọn</label>
    </div>
</div>

<div class="mb-3" id="goiTapSelection" style="display: none;">
    <label class="form-label">Chọn các Gói Tập</label>
    @Html.ListBoxFor(m => m.SelectedGoiTapIds, Model.DanhSachGoiTap, new { @class = "form-select", id = "goiTapSelect" })
</div>

<div class="offcanvas-footer">
    <div class="d-grid gap-2">
        <input type="submit" value="@(isEditing ? "Lưu Thay Đổi" : "Tạo Mới")" class="btn btn-offcanvas-primary" />
    </div>
</div>
}


<script>
    $(document).ready(function () {
        $('#goiTapSelect').select2({
            theme: "bootstrap-5",
            placeholder: "Chọn các gói tập...",
            dropdownParent: $('#crudOffcanvas'),
            width: '100%'
        });

        function toggleGoiTapSelection() {
            // Lấy giá trị của radio button đang được chọn
            var selectedValue = $('input[name="ApplyType"]:checked').val();

            if (selectedValue === 'include' || selectedValue === 'exclude') {
                $('#goiTapSelection').slideDown();
            } else
                $('#goiTapSelection').slideUp();
            }
        

        toggleGoiTapSelection();

    $('input[name="ApplyType"]').change(function () {
        toggleGoiTapSelection();
    });
    });
</script>