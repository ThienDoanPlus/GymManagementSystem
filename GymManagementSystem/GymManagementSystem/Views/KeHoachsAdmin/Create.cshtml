@model GymManagementSystem.Models.ViewModels.KeHoachViewModel
@{
    // Quyết định có dùng layout hay không
    if (!Request.IsAjaxRequest()) { Layout = "~/Views/Shared/_Layout.cshtml"; }

    // Quyết định tiêu đề và nút bấm dựa trên việc tạo mới hay chỉnh sửa
    bool isEditing = Model.KeHoach != null && Model.KeHoach.Id > 0;
    ViewBag.Title = isEditing ? "Chỉnh Sửa Kế Hoạch" : "Tạo Kế Hoạch Mới";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    if (isEditing)
    { @Html.HiddenFor(model => model.KeHoach.Id) }

<h5 class="text-muted">Thông tin chung</h5>
<hr class="mt-0 mb-3" />

<div class="mb-3">
    @Html.LabelFor(model => model.KeHoach.TenKeHoach, "Tên Kế Hoạch", htmlAttributes: new { @class = "form-label" })
    @Html.EditorFor(model => model.KeHoach.TenKeHoach, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.KeHoach.TenKeHoach, "", new { @class = "text-danger" })
</div>

<div class="mb-3">
    @Html.LabelFor(model => model.KeHoach.ThoiGianThucHien, "Thời Gian Thực Hiện (ngày)", htmlAttributes: new { @class = "form-label" })
    @Html.EditorFor(model => model.KeHoach.ThoiGianThucHien, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1" } })
</div>

<div class="mb-3">
    @Html.LabelFor(model => model.KeHoach.KhuyenMaiId, "Khuyến Mãi Thưởng", htmlAttributes: new { @class = "form-label" })
    @Html.DropDownListFor(model => model.KeHoach.KhuyenMaiId, Model.DanhSachKhuyenMai, "-- Không có --", new { @class = "form-select" })
</div>

<div class="form-check form-switch mb-4">
    @Html.CheckBoxFor(model => model.KeHoach.IsActive, new { @class = "form-check-input", role = "switch" })
    @Html.LabelFor(model => model.KeHoach.IsActive, "Kích hoạt", htmlAttributes: new { @class = "form-check-label" })
</div>

<h5 class="text-muted">Chi Tiết Các Ngày Tập</h5>
<hr class="mt-0 mb-3" />

<table id="detailsTable" class="modern-table mb-3">
    <thead>
        <tr>
            <th style="width: 15%;">Ngày</th>
            <th style="width: 55%;">Bài Tập</th>
            <th style="width: 20%;">Mục Tiêu</th>
            <th style="width: 10%;"></th>
        </tr>
    </thead>
    <tbody>
        @if (isEditing && Model.KeHoach.ChiTietKeHoachs != null)
        {
            foreach (var detail in Model.KeHoach.ChiTietKeHoachs.OrderBy(ct => ct.NgayTrongKeHoach))
            {
                <tr>
                    <td><input type="number" class="form-control day-number" value="@detail.NgayTrongKeHoach" readonly /></td>
                    <td>@Html.DropDownListFor(m => detail.BaiTapId, new SelectList(Model.DanhSachBaiTap, "Value", "Text", detail.BaiTapId), "-- Chọn bài tập --", new { @class = "form-select bai-tap-selector" })</td>
                    <td>@Html.TextBoxFor(m => detail.SoLanMucTieu, new { @class = "form-control so-lan-muc-tieu", type = "number", min = "1", Value = detail.SoLanMucTieu })</td>
                    <td class="text-end"><button type="button" class="btn-crud remove-detail"><i class="fas fa-trash"></i></button></td>
                </tr>
            }
        }
    </tbody>
</table>
<button type="button" id="addDetail" class="btn btn-outline-success btn-sm">
    <i class="fas fa-plus"></i> Thêm ngày tập
</button>

<div class="offcanvas-footer">
    <div class="d-grid gap-2">
        <input type="submit" value="Tạo Kế Hoạch" class="btn btn-offcanvas-primary" />
    </div>
</div>
}

<!-- Hàng mẫu để clone -->
<table style="display:none;">
    <tr id="newDetailRow">
        <td><input type="number" class="form-control day-number" readonly /></td>
        <td>@Html.DropDownList("BaiTapSelector", Model.DanhSachBaiTap, "-- Chọn bài tập --", new { @class = "form-select bai-tap-selector" })</td>
        <td><input type="number" class="form-control so-lan-muc-tieu" min="1" value="10" /></td>
        <td class="text-end"><button type="button" class="btn-crud remove-detail"><i class="fas fa-trash"></i></button></td>
    </tr>
</table>


<script>
    (function () {
        // Hàm để cập nhật lại name của các input cho đúng với model binding của list
        function updateRowIndices() {
            $('#detailsTable tbody tr').each(function (index, row) {
                // Cập nhật số ngày hiển thị
                $(row).find('.day-number').val(index + 1);

                // Xóa input ẩn cũ để tránh trùng lặp
                $(row).find('.day-hidden-input').remove();
                // Thêm input ẩn chứa số ngày để gửi về server
                $(row).append('<input type="hidden" class="day-hidden-input" name="KeHoach.ChiTietKeHoachs[' + index + '].NgayTrongKeHoach" value="' + (index + 1) + '" />');

                // Cập nhật name cho dropdown bài tập và input mục tiêu
                $(row).find('.bai-tap-selector').attr('name', 'KeHoach.ChiTietKeHoachs[' + index + '].BaiTapId');
                $(row).find('.so-lan-muc-tieu').attr('name', 'KeHoach.ChiTietKeHoachs[' + index + '].SoLanMucTieu');
            });
        }

        // Sự kiện khi nhấn nút "Thêm ngày tập"
        $('#addDetail').click(function () {
            var newRow = $('#newDetailRow').clone().removeAttr('id');
            $('#detailsTable tbody').append(newRow);
            updateRowIndices(); // Gọi hàm cập nhật lại toàn bộ
        });

        // Sự kiện khi nhấn nút xóa một dòng
        // Dùng .on() để gắn sự kiện cho cả các nút được thêm vào sau này
        $('#detailsTable').on('click', '.remove-detail', function () {
            $(this).closest('tr').remove();
            updateRowIndices(); // Gọi hàm cập nhật lại toàn bộ
        });

        // Chạy lần đầu để đảm bảo các name là đúng, đặc biệt quan trọng cho form Edit
        updateRowIndices();
    })();
</script>